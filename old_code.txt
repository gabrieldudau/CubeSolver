def colorPrint(self) -> str:
        up = ""
        middle = ""
        down = ""
        for key in self.cube.keys():
            up += "|"+ self.getPrintColor(self.cube[key][7]) + "|" + self.getPrintColor(self.cube[key][0]) + "|" + self.getPrintColor(self.cube[key][1]) + "|  |||  "
            middle += "|"+ self.getPrintColor(self.cube[key][6]) + "|" + self.getPrintColor(key) + "|" + self.getPrintColor(self.cube[key][2]) + "|  |||  "
            down +=  "|"+self.getPrintColor(self.cube[key][5]) + "|" + self.getPrintColor(self.cube[key][4]) + "|" + self.getPrintColor(self.cube[key][3]) + "|  |||  "
        return str(self.getPrintColor("up")+("|||  "+up + "\n") * 2 + self.getPrintColor("up") + ("|||  "+middle + "\n") * 2 + self.getPrintColor("up") +  ("|||  "+down + "\n") * 2 )+ self.getPrintColor("up")
    
    def getPrintColor(self, letter) -> str:
        outLetterNum = 4
        if letter ==  "R":
            return RED_Background + " "*outLetterNum + BLACK_Background
        if letter ==  "Y":
            return YELLOW_Background + " "*outLetterNum + BLACK_Background
        if letter ==  "O":
            return ORANGE_BACKGROUND + " "*outLetterNum + BLACK_Background
        if letter ==  "W":
            return WHITE_Background + " "*outLetterNum + BLACK_Background
        if letter ==  "B":
            return BLUE_Background + " "*outLetterNum + BLACK_Background
        if letter ==  "G":
            return GREEN_Background + " "*outLetterNum + BLACK_Background
        if letter ==  "up":
            return "|||  "+(("+"+"-"*outLetterNum)*2+"+"+"-"*outLetterNum+"+"+"  |||  ")*6 + "\n"
        else:
            return "NNNNN"